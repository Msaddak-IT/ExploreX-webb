{% extends 'backbase.html.twig' %}

{% block title %}New Categorie{% endblock %}

{% block body1 %}
    <h1>Create new Categorie</h1>

    <!-- Vos champs de formulaire existants -->
    {{ include('categorie/_form.html.twig') }}

    <button type="button" onclick="validateAndSubmit()">Submit</button>

    <a href="{{ path('app_categorie_index') }}">back to list</a>

    <script>
        function validateAndSubmit() {
            const nomCategorieInput = document.getElementById('nomCategorie');

            // Récupérez la valeur du champ
            const nomCategorieValue = nomCategorieInput.value;

            // Liste de mots inappropriés (ajoutez les mots que vous souhaitez filtrer)
            const badWords = ['badword1', 'badword2', 'badword3'];

            // Vérifiez si la valeur contient des mots inappropriés
            if (containsBadWords(nomCategorieValue, badWords)) {
                alert('Le champ contient des mots inappropriés. Veuillez le modifier.');
            } else {
                // Soumettez le formulaire si la validation réussit
                nomCategorieInput.closest('form').submit(); // Remplacez 'yourFormId' par l'ID réel de votre formulaire
            }
        }

        function containsBadWords(value, badWords) {
            // Convertissez la valeur en minuscules pour une correspondance insensible à la casse
            const lowercasedValue = value.toLowerCase();

            // Vérifiez si la valeur contient des mots inappropriés
            return badWords.some(word => lowercasedValue.includes(word.toLowerCase()));
        }
    </script>
{% endblock %}
